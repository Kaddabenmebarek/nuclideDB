package org.research.kadda.nuclide.entity;
// Generated Apr 29, 2019 9:26:57 AM by Hibernate Tools 5.2.12.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Nuclide generated by hbm2java
 */
@Entity
@Table(name = "NUCLIDE", schema = "OSIRIS")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class Nuclide implements java.io.Serializable {

	private static final long serialVersionUID = -416912636680761856L;
	private String nuclideName;
	private double halfTime;
	private double kbqPerFreigrenze;
	private BigDecimal disposalLimit;
	private Set<NuclideAllowance> nuclideAllowances = new HashSet<NuclideAllowance>(0);
	private Set<NuclideBottle> nuclideBottles = new HashSet<NuclideBottle>(0);
	private Set<NuclideWaste> nuclideWastes = new HashSet<NuclideWaste>(0);

	public Nuclide() {
	}

	public Nuclide(String nuclideName) {
		this.nuclideName = nuclideName;
	}	
	
	public Nuclide(String nuclideName, double halfTime, double kbqPerFreigrenze) {
		this.nuclideName = nuclideName;
		this.halfTime = halfTime;
		this.kbqPerFreigrenze = kbqPerFreigrenze;
	}

	public Nuclide(String nuclideName, double halfTime, double kbqPerFreigrenze, BigDecimal disposalLimit) {
		this.nuclideName = nuclideName;
		this.halfTime = halfTime;
		this.kbqPerFreigrenze = kbqPerFreigrenze;
		this.disposalLimit = disposalLimit;
	}

	@Id
	@Column(name = "NUCLIDE_NAME", unique = true, nullable = false, length = 16)
	public String getNuclideName() {
		return this.nuclideName;
	}

	public void setNuclideName(String nuclideName) {
		this.nuclideName = nuclideName;
	}

	@Column(name = "HALF_TIME", nullable = false, precision = 126, scale = 0)
	public double getHalfTime() {
		return this.halfTime;
	}

	public void setHalfTime(double halfTime) {
		this.halfTime = halfTime;
	}

	@Column(name = "KBQ_PER_FREIGRENZE", nullable = false, precision = 126, scale = 0)
	public double getKbqPerFreigrenze() {
		return this.kbqPerFreigrenze;
	}

	public void setKbqPerFreigrenze(double kbqPerFreigrenze) {
		this.kbqPerFreigrenze = kbqPerFreigrenze;
	}

	@Column(name = "DISPOSAL_LIMIT", precision = 22, scale = 0)
	public BigDecimal getDisposalLimit() {
		return this.disposalLimit;
	}

	public void setDisposalLimit(BigDecimal disposalLimit) {
		this.disposalLimit = disposalLimit;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nuclide")
	public Set<NuclideAllowance> getNuclideAllowances() {
		return this.nuclideAllowances;
	}

	public void setNuclideAllowances(Set<NuclideAllowance> nuclideAllowances) {
		this.nuclideAllowances = nuclideAllowances;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nuclide")
	public Set<NuclideBottle> getNuclideBottles() {
		return this.nuclideBottles;
	}

	public void setNuclideBottles(Set<NuclideBottle> nuclideBottles) {
		this.nuclideBottles = nuclideBottles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nuclide")
	@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	public Set<NuclideWaste> getNuclideWastes() {
		return this.nuclideWastes;
	}

	public void setNuclideWastes(Set<NuclideWaste> nuclideWastes) {
		this.nuclideWastes = nuclideWastes;
	}

	
	@Override
	public String toString() {
		return this.nuclideName + "/ " + this.halfTime + "/ " + this.kbqPerFreigrenze+ "/ " + this.disposalLimit;
	}
	

}
