package org.research.kadda.nuclide.entity;
// Generated Apr 29, 2019 9:26:57 AM by Hibernate Tools 5.2.12.Final

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

/**
 * NuclideUsage generated by hbm2java
 */
@Entity
@Table(name = "NUCLIDE_USAGE", schema = "OSIRIS")
@Audited
@SequenceGenerator(name="nuclide_usage_seq", sequenceName="osiris.nuclide_usage_seq_id", allocationSize=1)
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class NuclideUsage implements java.io.Serializable {

	private static final long serialVersionUID = 5984639707949483570L;
	private int nuclideUsageId;
	private NuclideBottle nuclideBottle;
	private NuclideUser nuclideUser;
	private NuclideWaste nuclideWasteBySolidWasteId;
	private NuclideWaste nuclideWasteByLiquidWasteId;
	private double volume;
	private String bioLabJournal;
	private String assayType;
	private Date usageDate;
	private double liquidWastePercentage;
	private double solidWastePercentage;
	private String destination;
	private Integer newNuclideBottleId;

	public NuclideUsage() {
	}

	public NuclideUsage(NuclideBottle nuclideBottle, NuclideUser nuclideUser, double volume,
			String bioLabJournal, String assayType, Date usageDate, double liquidWastePercentage,
			double solidWastePercentage) {
		this.nuclideBottle = nuclideBottle;
		this.nuclideUser = nuclideUser;
		this.volume = volume;
		this.bioLabJournal = bioLabJournal;
		this.assayType = assayType;
		this.usageDate = usageDate;
		this.liquidWastePercentage = liquidWastePercentage;
		this.solidWastePercentage = solidWastePercentage;
	}

	public NuclideUsage(NuclideBottle nuclideBottle, NuclideUser nuclideUser,
			NuclideWaste nuclideWasteBySolidWasteId, NuclideWaste nuclideWasteByLiquidWasteId, double volume,
			String bioLabJournal, String assayType, Date usageDate, double liquidWastePercentage,
			double solidWastePercentage, String destination, Integer newNuclideBottleId) {
		this.nuclideBottle = nuclideBottle;
		this.nuclideUser = nuclideUser;
		this.nuclideWasteBySolidWasteId = nuclideWasteBySolidWasteId;
		this.nuclideWasteByLiquidWasteId = nuclideWasteByLiquidWasteId;
		this.volume = volume;
		this.bioLabJournal = bioLabJournal;
		this.assayType = assayType;
		this.usageDate = usageDate;
		this.liquidWastePercentage = liquidWastePercentage;
		this.solidWastePercentage = solidWastePercentage;
		this.destination = destination;
		this.newNuclideBottleId = newNuclideBottleId;
	}

	@Id
	@Column(name = "NUCLIDE_USAGE_ID", unique = true, nullable = false, precision = 8, scale = 0)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator="nuclide_usage_seq")
	public int getNuclideUsageId() {
		return this.nuclideUsageId;
	}

	public void setNuclideUsageId(int nuclideUsageId) {
		this.nuclideUsageId = nuclideUsageId;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.MERGE)
	@JoinColumn(name = "NUCLIDE_BOTTLE_ID", nullable = false)
	public NuclideBottle getNuclideBottle() {
		return this.nuclideBottle;
	}

	public void setNuclideBottle(NuclideBottle nuclideBottle) {
		this.nuclideBottle = nuclideBottle;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "USER_ID", nullable = false)
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	public NuclideUser getNuclideUser() {
		return this.nuclideUser;
	}

	public void setNuclideUser(NuclideUser nuclideUser) {
		this.nuclideUser = nuclideUser;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.MERGE)
	@JoinColumn(name = "SOLID_WASTE_ID")
	public NuclideWaste getNuclideWasteBySolidWasteId() {
		return this.nuclideWasteBySolidWasteId;
	}

	public void setNuclideWasteBySolidWasteId(NuclideWaste nuclideWasteBySolidWasteId) {
		this.nuclideWasteBySolidWasteId = nuclideWasteBySolidWasteId;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.MERGE)
	@JoinColumn(name = "LIQUID_WASTE_ID")
	public NuclideWaste getNuclideWasteByLiquidWasteId() {
		return this.nuclideWasteByLiquidWasteId;
	}

	public void setNuclideWasteByLiquidWasteId(NuclideWaste nuclideWasteByLiquidWasteId) {
		this.nuclideWasteByLiquidWasteId = nuclideWasteByLiquidWasteId;
	}

	@Column(name = "VOLUME", nullable = false, precision = 126, scale = 0)
	public double getVolume() {
		return this.volume;
	}

	public void setVolume(double volume) {
		this.volume = volume;
	}

	@Column(name = "BIO_LAB_JOURNAL", nullable = false, length = 20)
	public String getBioLabJournal() {
		return this.bioLabJournal;
	}

	public void setBioLabJournal(String bioLabJournal) {
		this.bioLabJournal = bioLabJournal;
	}

	@Column(name = "ASSAY_TYPE", nullable = false, length = 32)
	public String getAssayType() {
		return this.assayType;
	}

	public void setAssayType(String assayType) {
		this.assayType = assayType;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "USAGE_DATE", nullable = false, length = 7)
	public Date getUsageDate() {
		return this.usageDate;
	}

	public void setUsageDate(Date usageDate) {
		this.usageDate = usageDate;
	}

	@Column(name = "LIQUID_WASTE_PERCENTAGE", nullable = false, precision = 126, scale = 0)
	public double getLiquidWastePercentage() {
		return this.liquidWastePercentage;
	}

	public void setLiquidWastePercentage(double liquidWastePercentage) {
		this.liquidWastePercentage = liquidWastePercentage;
	}

	@Column(name = "SOLID_WASTE_PERCENTAGE", nullable = false, precision = 126, scale = 0)
	public double getSolidWastePercentage() {
		return this.solidWastePercentage;
	}

	public void setSolidWastePercentage(double solidWastePercentage) {
		this.solidWastePercentage = solidWastePercentage;
	}

	@Column(name = "DESTINATION", length = 32)
	public String getDestination() {
		return this.destination;
	}

	public void setDestination(String destination) {
		this.destination = destination;
	}

	@Column(name = "NEW_NUCLIDE_BOTTLE_ID", precision = 8, scale = 0)
	public Integer getNewNuclideBottleId() {
		return this.newNuclideBottleId;
	}

	public void setNewNuclideBottleId(Integer newNuclideBottleId) {
		this.newNuclideBottleId = newNuclideBottleId;
	}

}
