package org.research.kadda.nuclide.entity;
// Generated May 12, 2022, 1:22:21 PM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * NuclideLocation generated by hbm2java
 */
@Entity
@Table(name = "NUCLIDE_LOCATION", schema = "OSIRIS")
@SequenceGenerator(name="NUCLIDE_LOCATION_SEQ", sequenceName="OSIRIS.NUCLIDE_LOCATION_ID_SEQ", allocationSize=1)
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class NuclideLocation implements java.io.Serializable {

	private static final long serialVersionUID = -5992992383081629624L;
	private int id;
	private NuclideLocationType nuclideLocationType;
	private String location;
	private Character isEnable;
	private Set<NuclideLocationAllowance> nuclideLocationAllowances = new HashSet<NuclideLocationAllowance>(0);

	public NuclideLocation() {
	}

	public NuclideLocation(int id) {
		this.id = id;
	}

	public NuclideLocation(int id, NuclideLocationType nuclideLocationType, String location, Character isEnable,
			Set<NuclideLocationAllowance> nuclideLocationAllowances) {
		this.id = id;
		this.nuclideLocationType = nuclideLocationType;
		this.location = location;
		this.isEnable = isEnable;
		this.nuclideLocationAllowances = nuclideLocationAllowances;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 8, scale = 0)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator="NUCLIDE_LOCATION_SEQ")
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LOCATION_TYPE")
	public NuclideLocationType getNuclideLocationType() {
		return this.nuclideLocationType;
	}

	public void setNuclideLocationType(NuclideLocationType nuclideLocationType) {
		this.nuclideLocationType = nuclideLocationType;
	}

	@Column(name = "LOCATION", length = 32)
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "IS_ENABLE", length = 1)
	public Character getIsEnable() {
		return this.isEnable;
	}

	public void setIsEnable(Character isEnable) {
		this.isEnable = isEnable;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nuclideLocation")
	@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	public Set<NuclideLocationAllowance> getNuclideLocationAllowances() {
		return this.nuclideLocationAllowances;
	}

	public void setNuclideLocationAllowances(Set<NuclideLocationAllowance> nuclideLocationAllowances) {
		this.nuclideLocationAllowances = nuclideLocationAllowances;
	}

}
